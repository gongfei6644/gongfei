一、运算符
	1.=
	2.+ - * / %
	3.+= -+
	4.++ --
	5.比较运算符
		> < >= <= ==(相等) != ===(全等) !==
		1）比较运算的结果永远是布尔值
		2）运算规则：
			1.同为字符串进行比较，不会转换数据类型，逐位比较每位字符的Unicode码值
				例：
					"10" > "2" //false
					"he" > "She"//true
			2.其他情况下，一律将操作数转换为number进行比较.如果转换失败则变成NaN参与比较运算，结果一律为false
		3）相等与全等
			相等：包含自动类型转换，只要值相等就成立
			全等：不会转换类型，要求数据类型一致并且值相等才成立。
			------------------------
			不等：不考虑数据类型，只要值不相等就成立
			不全等：数据类型不同或值不等，都成立
	6.逻辑运算符
		逻辑运算符的结果为布尔值
		1）逻辑与 &&
			全1则1
			例：
				10>5 && 2>3 //false
				10>5 && 2<3 //true
		2）逻辑或 ||
			有1则1
			例：
				10>5 || 2>3 //true
				10<5 || 2>3 //false
		3）逻辑非 !
			对已有结果取反.切换布尔值。除“零”值以外，其他值都为真。
			例：
				var a = 5;
				var r = !a;//!Boolean(a)
				var b = 0;
				var r2 = !b;//true
				var r3 = !3 > 5;
				var r4 = !(3 > 5);
				var r5 = !(3 > 5) && 10 > 5;
			练习：
				//定义变量表示年份，
				接收用户输入的年份，判断是否为闰年
				能被4整除并且不能被100整除或
				能被400整除
				var year = prompt("");//判断数据类型
			
			注意：&&运算的优先级高于||
	7.位运算符
		位运算是指直接对数据的二进制位操作
		1）位与 &
			全1则1
			例：
				3 & 5 = 1
				011
			& 101
			-------
				001		
		2）位或 |
			有1则1
			例：
				3 | 5 = 7
				011
			| 101
			-------
				111	
		3）异或 ^
			相同为0，不同为1
			例：
				3 ^ 5 = 6
				011
			^ 101
			-------
				110	
			使用：不借助第三方变量的情况下互换变量的值
				var a = 3,b = 5;
				a = a ^ b; //6
				b = a ^ b; //3
				a = a ^ b; //5
	8.三目运算符
		语法：表达式1 ? 表达式2 : 表达式3;
		过程：
			判断表达式1是否成立?
			成立则执行或返回表达式2的结果
			不成立返回表达式3的结果
		练习：
			1）接收用户输入的成绩，判断区间范围
			2）接收用户输入的身高(m)和体重(kg),计算bmi,
			bmi = 体重/（身高*身高）
			保留两位小数显示，判断身体指数
			bmi >= 23.9
			23.9 >= bmi >= 18.5 "健康"
			bmi < 18.5

二、流程控制
	1.选择结构（分支语句）
		1）if语句
			练习：
				1.接收用户输入的成绩，使用if判断区间
				2.接收用户输入的年，月，日，判断当日是该年的第几天？
		2）switch语句
			用于值的全等匹配
			语法：
				switch(a){
				 //依次列举出所有可能的值
				 case 值1:
				 	//匹配全等时执行的代码段
					break;//结束匹配
				 case 值2:
				 	//代码语句
					break;
				 ...
				 default:
				 	//所有case匹配失败后，执行的默认操作
				}
			特殊用法：
				1.省略break，会从当前匹配到的case开始向后执行所有的代码语句
				2.多个case共用代码段
					case 1:
					case 3:
						//代码段
						break;
			练习：
				使用switch改版日期计算

	2.循环语句
		重复执行某段代码
		1）while循环
			语法：
				var i = 1;//定义循环变量
				while(i < 101){//定义循环条件
					//条件成立时执行循环体
					i ++;//更新循环变量
				}
			练习：
				1.控制台输出1-100之间的整数
				2.求1-100之间整数的和
				3.输出1-100之间所有3的倍数

		2）do-while循环
			语法：
				do{
					//循环体
					//更新循环变量
				}while(循环条件);
			区别：
				while循环先判断，条件成立才执行；
				do-while循环先执行，后判断，即使条件不成立，也会执行一次循环体。
			练习：
				循环接收用户输入，在控制台输出，直至用户输入"exit"表示退出

		3）for循环
			语法：
				for(var i=1;i<101;i++){
					//循环体
				}
		4）循环控制
			1.break表示强制结束循环
			2.continue表示结束此次循环，开始下一次循环
		5）循环嵌套
			for(var i = 1; i <= 9; i++){
				for(var j = 1; j <= 9; j++){
					
				}
			}
		作业：
			1.改版日期计算
			2.接收用户输入的年，月，日，计算当日是星期几
				已知：1990.1.1是星期一/1900.1.1是星期一
			3.在控制台输出九九乘法表








